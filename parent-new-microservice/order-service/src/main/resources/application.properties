spring.application.name=order-service

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/Order?createDatabaseIfNotExist=true
spring.datasource.username=username
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
#uri for eureka server
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

# Enable actuator for management and prometheus
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Resilience4j properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true


#expose resilience circuit-breaker to the metrics
management.metrics.export.resilience4j.enabled=true

# Resilience4j timeout properties
resilience4j.timeLimiter.instances.inventory.timeout-duration=5s

#Resilience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=4s

logging.level.io.github.resilience4j.circuitbreaker=DEBUG
logging.level.org.springframework.web.reactive.function.client.WebClient=DEBUG

# Enable tracing
management.tracing.enabled=true


# Configure the base URL of the Zipkin server
management.tracing.export.zipkin.endpoint=http://localhost:9411

#try change localhost -> kafka
spring.kafka.bootstrap-servers=localhost:9092, kafka:9092, kafka:29092
#kafka automatically configure in spring boot project

#add property
spring.kafka.template.default.topic=notificationTopic

#serialize notification to the kafka broker
spring.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.valueSerializer=org.springframework.kafka.support.serializer.JsonSerializer
#identified the PlacedOrderEvent message from producer with token name "event" - can be any token name
spring.kafka.producer.properties.spring.json.type.mapping=event:com.microservice.order_service.event.OrderPlacedEvent

# Configure the sampling probability (1.0 means 100% of the requests will be traced)
management.tracing.sampler.probability=1.0

server.port=8082


